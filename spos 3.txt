//Assignment No. : 3

//1. First come first out



import java.util.Scanner;
class fcfs{
public static void main(String args[]){
int burst_time[],process[],waiting_time[],tat[],i,j,n,total=0,pos,temp;
float wait_avg, TAT_avg;
Scanner s = new Scanner(System.in);
System.out.print("Enter number of process: ");
n = s.nextInt();
process = new int[n];
burst_time = new int[n];
waiting_time = new int[n];
tat = new int[n];
System.out.println("\nEnter Burst time:");
for(i=0;i<n;i++)
{
System.out.print("\nProcess["+(i+1)+"]: ");
burst_time[i] = s.nextInt();;
process[i]=i+1; //Process Number
}
//First process has 0 waiting time
waiting_time[0]=0;
//calculate waiting time
for(i=1;i<n;i++)
{
waiting_time[i]=0;
for(j=0;j<i;j++)
waiting_time[i]+=burst_time[j];
total+=waiting_time[i];
}
//Calculating Average waiting time
wait_avg=(float)total/n;
total=0;
System.out.println("\nProcess\t Burst Time \tWaiting Time\tTurnaround Time");
for(i=0;i<n;i++)
{
tat[i]=burst_time[i]+waiting_time[i];
total+=tat[i];//Calculating TurnaroundTimetotal+=tat[i];
System.out.println("\n p"+process[i]+"\t\t"+burst_time[i]+"\t\t"+waiting_time[i]+"\t\t "+tat[i]);
}
//Calculation of Average Turnaround Time
TAT_avg=(float)total/n;
System.out.println("\n\nAverage Waiting Time: "+wait_avg);
System.out.println("\nAverage Turnaround Time: "+TAT_avg);
}
}
/* OUTPUT
D:\SPOS>java fcfs
Enter number of process: 4
Enter Burst time:
Process[1]: 3
Process[2]: 5
Process[3]: 2
Process[4]: 10
Process Burst Time Waiting Time Turnaround Time
p1 3 0 3
p2 5 3 8
p3 2 8 10
p4 10 10 20
Average Waiting Time: 5.25
Average Turnaround Time: 10.25
*/


//2.sortest job first


import java.util.Scanner;
class SJF{
public static void main(String args[]){
int burst_time[],process[],waiting_time[],tat[],i,j,n,total=0,pos,temp;
float wait_avg,TAT_avg;
Scanner s = new Scanner(System.in);
System.out.print("Enter number of process: ");
n = s.nextInt();
process = new int[n];
burst_time = new int[n];
waiting_time = new int[n];
tat = new int[n];
System.out.println("\nEnter Burst time:");
for(i=0;i<n;i++)
{
System.out.print("\nProcess["+(i+1)+"]: ");
burst_time[i] = s.nextInt();;
process[i]=i+1; //Process Number
}
//Sorting
for(i=0;i<n;i++)
{
pos=i;
for(j=i+1;j<n;j++)
{
if(burst_time[j]<burst_time[pos])
pos=j;
}
temp=burst_time[i];
burst_time[i]=burst_time[pos];
burst_time[pos]=temp;
temp=process[i];
process[i]=process[pos];
process[pos]=temp;
}
//First process has 0 waiting time
waiting_time[0]=0;
//calculate waiting time
for(i=1;i<n;i++)
{
waiting_time[i]=0;
for(j=0;j<i;j++)
waiting_time[i]+=burst_time[j];
total+=waiting_time[i];
}
//Calculating Average waiting time
wait_avg=(float)total/n;
total=0;
System.out.println("\nProcess\t Burst Time \tWaiting Time\tTurnaround Time");
for(i=0;i<n;i++)
{
tat[i]=burst_time[i]+waiting_time[i]; //Calculating Turnaround Time
total+=tat[i];
System.out.println("\n p"+process[i]+"\t\t "+burst_time[i]+"\t\t "+waiting_time[i]+"\t\t "+tat[i]);
}
//Calculation of Average Turnaround Time
TAT_avg=(float)total/n;
System.out.println("\n\nAverage Waiting Time: "+wait_avg);
System.out.println("\nAverage Turnaround Time: "+TAT_avg);
}}


/*  output

Enter number of process: 10

Enter Burst time:

Process[1]: 3

Process[2]: 4

Process[3]: 6

Process[4]: 2

Process[5]: 7

Process[6]: 1

Process[7]: 3

Process[8]: 2

Process[9]: 4

Process[10]: 8

Process  Burst Time     Waiting Time    Turnaround Time

 p6              1               0               1

 p4              2               1               3

 p8              2               3               5

 p1              3               5               8

 p7              3               8               11

 p2              4               11              15

 p9              4               15              19

 p3              6               19              25

 p5              7               25              32

 p10             8               32              40


Average Waiting Time: 11.9

Average Turnaround Time: 15.9

*/



//3.priority


import java.util.Scanner;
public class Priority {
public static void main(String args[]) {
Scanner s = new Scanner(System.in);
int x,n,p[],pp[],bt[],w[],t[],awt,atat,i;
p = new int[10];
pp = new int[10];
bt = new int[10];
w = new int[10];
t = new int[10];
//n is number of process
//p is process
//pp is process priority
//bt is process burst time
//w is wait time
// t is turnaround time
//awt is average waiting time
//atat is average turnaround time
System.out.print("Enter the number of process : ");
n = s.nextInt();
System.out.print("\n\t Enter burst time : time priorities \n");
for(i=0;i<n;i++)
{
System.out.print("\nProcess["+(i+1)+"]:");
bt[i] = s.nextInt();
pp[i] = s.nextInt();
p[i]=i+1;
}
//sorting on the basis of priority
for(i=0;i<n-1;i++)
{
for(int j=i+1;j<n;j++)
{
if(pp[i]<pp[j])
{
x=pp[i];
pp[i]=pp[j];
pp[j]=x;
x=bt[i];
bt[i]=bt[j];
bt[j]=x;
x=p[i];
p[i]=p[j];
p[j]=x;
}
}
}
w[0]=0;
awt=0;
t[0]=bt[0];
atat=t[0];
for(i=1;i<n;i++)
{
w[i]=t[i-1];
awt+=w[i];
t[i]=w[i]+bt[i];
atat+=t[i];
}
//Displaying the process
System.out.print("\n\nProcess \t Burst Time \t Wait Time \t Turn
Around Time Priority \n");
for(i=0;i<n;i++)
System.out.print("\n "+p[i]+"\t\t "+bt[i]+"\t\t "+w[i]+"\t\t
"+t[i]+"\t\t "+pp[i]+"\n");
awt/=n;
atat/=n;
System.out.print("\n Average Wait Time : "+awt);
System.out.print("\n Average Turn Around Time : "+atat);
}
}


/* output

Enter the number of process : 7

         Enter burst time : time priorities

Process[1]:6
1

Process[2]:5 2

Process[3]:3 5

Process[4]:2 3

Process[5]:7 4

Process[6]:4 6

Process[7]:8 7


Process          Burst Time      Wait Time       Turn Around Time Priority

 7               8               0              8                7

 6               4               8              12               6

 3               3               12             15               5

 5               7               15             22               4

 4               2               22             24               3

 2               5               24             29               2

 1               6               29             35               1

 Average Wait Time : 15
 Average Turn Around Time : 20




*/



4.round robin


import java.util.Scanner;
public class Roundfinal1 {
public static void main(String args[]) {
Scanner s = new Scanner(System.in);
int wtime[],btime[],rtime[],num,quantum,total;
wtime = new int[10];
btime = new int[10];
rtime = new int[10];
System.out.print("Enter number of processes(MAX 10): ");
num = s.nextInt();
System.out.print("Enter burst time");
for(int i=0;i<num;i++) { System.out.print("\nP["+(i+1)+"]: "); btime[i] = s.nextInt(); rtime[i] = btime[i]; wtime[i]=0; } System.out.print("\n\nEnter quantum: "); quantum = s.nextInt(); int rp = num; int i=0; int time=0; System.out.print("0"); wtime[0]=0; while(rp!=0) { if(rtime[i]>quantum)
{
rtime[i]=rtime[i]-quantum;
System.out.print(" | P["+(i+1)+"] | ");
time+=quantum;
System.out.print(time);
}
else if(rtime[i]<=quantum && rtime[i]>0)
{time+=rtime[i];
rtime[i]=rtime[i]-rtime[i];
System.out.print(" | P["+(i+1)+"] | ");
rp--;
System.out.print(time);
}
i++;
if(i==num)
{
i=0;
}
}
}
}


/* output

Enter number of processes(MAX 10): 6
Enter burst time
P[1]: 5

P[2]: 8

P[3]: 3

P[4]: 2

P[5]: 5

P[6]: 3


Enter quantum: 2

0 | P[1] | 2 | P[2] | 4 | P[3] | 6 | P[4] | 8 | P[5] | 10 | P[6] | 12 | P[1] | 14 | P[2] | 16 | P[3] | 17 | P[5] | 19 | P[6] | 20 | P[1] | 21 | P[2] | 23 | P[5] | 24 | P[2] | 26


*/
